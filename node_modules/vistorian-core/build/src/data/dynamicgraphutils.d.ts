export declare function isValidIndex(v: number | undefined): boolean;
export declare class Selection {
    name: string;
    elementIds: number[];
    acceptedType: string;
    color: string;
    id: number;
    showColor: boolean;
    filter: boolean;
    priority: number;
    constructor(id: number, acceptedType: string);
    acceptsType(type: string): boolean;
}
export declare class DataSet {
    name: string;
    nodeTable: any[];
    linkTable: any[];
    locationTable: any[];
    nodeSchema: NodeSchema;
    linkSchema: LinkSchema;
    locationSchema: LocationSchema;
    selections: Selection[];
    timeFormat: string;
    directed: boolean;
    constructor(params: any);
}
export declare function getDefaultNodeSchema(): NodeSchema;
export declare function getDefaultLinkSchema(): LinkSchema;
export declare function getDefaultLocationSchema(): LocationSchema;
export declare class TableSchema {
    name: string;
    constructor(name: string);
}
export declare class NodeSchema extends TableSchema {
    id: number;
    label: number;
    time: number;
    location: number;
    nodeType: number;
    shape: number;
    color: number;
    constructor(id: number);
}
export declare class LinkSchema extends TableSchema {
    id: number;
    source: number;
    target: number;
    weight: number;
    linkType: number;
    directed: number;
    time: number;
    constructor(id: number, source: number, target: number);
}
export declare class LocationSchema extends TableSchema {
    id: number;
    label: number;
    geoname: number;
    longitude: number;
    latitude: number;
    x: number;
    y: number;
    z: number;
    radius: number;
    constructor(id: number, label: number, geoname?: number, longitude?: number, latitude?: number, x?: number, y?: number, z?: number, radius?: number);
}
