import * as d3 from "d3";
import * as dynamicgraph from "../data/dynamicgraph";
import { SmartSlider } from "./smartslider";
import { RadioButton } from "./ui";
export declare class TimeSlider {
    /** VISUALIZATION  PARAMETERS */
    MARGIN_SLIDER_RIGHT: number;
    MARGIN_SLIDER_LEFT: number;
    TICK_GAP: number;
    TICK_LABEL_GAP: number;
    SLIDER_TOP: number;
    HEIGHT: number;
    /** GLOBAL VARIABLES */
    dgraph: dynamicgraph.DynamicGraph;
    slider: SmartSlider;
    times: dynamicgraph.Time[];
    sliderWidth: number;
    widgetWidth: number;
    callBack: ((min: any, max: any, single: any) => void) | undefined;
    propagateButton: RadioButton;
    labelStart: any;
    labelEnd: any;
    tickScale: any;
    tickHeightFunction: (x: number) => number;
    constructor(dgraph: dynamicgraph.DynamicGraph, width: number, callBack?: (min: any, max: any, single: any) => void);
    appendTo(svg: d3.Selection<any, any, any, any>, x?: number, y?: number): void;
    drawTickmarks(granularity: number, tickTimes: dynamicgraph.Time[], svg: d3.Selection<any, any, any, any>): void;
    formatForGranularities(time: dynamicgraph.Time, gran_min: number, gran_max: number): string;
    updateTime(minUnix: number, maxUnix: number, single: number): void;
    set(startUnix: number, endUnix: number): void;
}
