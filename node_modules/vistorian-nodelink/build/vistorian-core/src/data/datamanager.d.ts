import { DataSet } from "./dynamicgraphutils";
import { DynamicGraph } from "./dynamicgraph";
/********* MOVED FROM DATAMANAGER TO DYNAMICGRAPH **********/
export interface DataManagerOptions {
    keepOnlyOneSession: boolean;
}
export declare class DataManager {
    constructor(options?: DataManagerOptions);
    setOptions(options: DataManagerOptions): void;
    dynamicGraph?: DynamicGraph;
    keepOnlyOneSession: boolean;
    session: string;
    sessionDataPrefix: string;
    clearSessionData(session: string): void;
    clearAllSessionData(): void;
    isSessionCached(session: string, dataSetName: string): boolean;
    /**
     * Import a data set into networkcube's local storage.
     * @param  {string}  session - current session id
     * @param  {DataSet} data    - a networkcube.DataSet
     */
    importData(session: string, data: DataSet): void;
    SEP: string;
    saveToStorage<T>(dataName: string, valueName: string, value: T, replacer?: (key: string, value: any) => any): void;
    getFromStorage<TResult>(dataName: string, valueName: string, reviver?: (key: any, value: any, state: any) => any, state?: any): TResult | undefined;
    removeFromStorage(dataName: string, valueName: string): void;
    getGraph(session: string, dataname: string): DynamicGraph;
    isSchemaWellDefined(data: DataSet): boolean;
}
